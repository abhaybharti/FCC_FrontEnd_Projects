{"ast":null,"code":"import _classCallCheck from \"E:\\\\Work\\\\Projects\\\\FCC_FrontEnd_Projects\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Work\\\\Projects\\\\FCC_FrontEnd_Projects\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Work\\\\Projects\\\\FCC_FrontEnd_Projects\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Work\\\\Projects\\\\FCC_FrontEnd_Projects\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Work\\\\Projects\\\\FCC_FrontEnd_Projects\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Work\\\\Projects\\\\FCC_FrontEnd_Projects\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { calculate as _calculate, deleteLastEntry, clear as _clear, evaluateExpression, square as _square, squareRoot as _squareRoot } from \"../src/actions/calculate\";\nimport Calculator from \"./components/calculator\";\nimport * as fromCalculator from \"./reducers\";\nimport \"./App.css\";\nexport var App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"mounted calculator!\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"calculator--container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Calculator.Screen, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), React.createElement(Calculator.Keypad, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    expression: fromCalculator.getExpression(state),\n    total: fromCalculator.getTotal(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    calculate: function calculate(buttonKey) {\n      dispatch(_calculate(buttonKey));\n    },\n    delete: function _delete() {\n      dispatch(deleteLastEntry());\n    },\n    clear: function clear() {\n      dispatch(_clear());\n    },\n    evaluate: function evaluate() {\n      dispatch(evaluateExpression());\n    },\n    square: function square() {\n      dispatch(_square());\n    },\n    squareRoot: function squareRoot() {\n      dispatch(_squareRoot());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:\\Work\\Projects\\FCC_FrontEnd_Projects\\src\\App.js"],"names":["React","Component","connect","calculate","deleteLastEntry","clear","evaluateExpression","square","squareRoot","Calculator","fromCalculator","App","console","log","props","mapStateToProps","state","expression","getExpression","total","getTotal","mapDispatchToProps","dispatch","buttonKey","delete","evaluate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,SAAS,IAATA,UADF,EAEEC,eAFF,EAGEC,KAAK,IAALA,MAHF,EAIEC,kBAJF,EAKEC,MAAM,IAANA,OALF,EAMEC,UAAU,IAAVA,WANF,QAOO,0BAPP;AAQA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,KAAKC,cAAZ,MAAgC,YAAhC;AACA,OAAO,WAAP;AAEA,WAAaC,GAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCACsB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AAHH;AAAA;AAAA,6BAKW;AACP,aACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD,CAAY,MAAZ,oBAAuB,KAAKC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,oBAAC,UAAD,CAAY,MAAZ,oBAAuB,KAAKA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AAMD;AAZH;;AAAA;AAAA,EAAyBb,SAAzB;;AAeA,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,UAAU,EAAEP,cAAc,CAACQ,aAAf,CAA6BF,KAA7B,CADP;AAELG,IAAAA,KAAK,EAAET,cAAc,CAACU,QAAf,CAAwBJ,KAAxB;AAFF,GAAP;AAID,CALD;;AAOA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLnB,IAAAA,SAAS,EAAE,mBAAAoB,SAAS,EAAI;AACtBD,MAAAA,QAAQ,CAACnB,UAAS,CAACoB,SAAD,CAAV,CAAR;AACD,KAHI;AAILC,IAAAA,MAAM,EAAE,mBAAM;AACZF,MAAAA,QAAQ,CAAClB,eAAe,EAAhB,CAAR;AACD,KANI;AAOLC,IAAAA,KAAK,EAAE,iBAAM;AACXiB,MAAAA,QAAQ,CAACjB,MAAK,EAAN,CAAR;AACD,KATI;AAULoB,IAAAA,QAAQ,EAAE,oBAAM;AACdH,MAAAA,QAAQ,CAAChB,kBAAkB,EAAnB,CAAR;AACD,KAZI;AAaLC,IAAAA,MAAM,EAAE,kBAAM;AACZe,MAAAA,QAAQ,CAACf,OAAM,EAAP,CAAR;AACD,KAfI;AAgBLC,IAAAA,UAAU,EAAE,sBAAM;AAChBc,MAAAA,QAAQ,CAACd,WAAU,EAAX,CAAR;AACD;AAlBI,GAAP;AAoBD,CArBD;;AAuBA,eAAeN,OAAO,CACpBa,eADoB,EAEpBM,kBAFoB,CAAP,CAGbV,GAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  calculate,\n  deleteLastEntry,\n  clear,\n  evaluateExpression,\n  square,\n  squareRoot\n} from \"../src/actions/calculate\";\nimport Calculator from \"./components/calculator\";\nimport * as fromCalculator from \"./reducers\";\nimport \"./App.css\";\n\nexport class App extends Component {\n  componentDidMount() {\n    console.log(\"mounted calculator!\");\n  }\n\n  render() {\n    return (\n      <div className=\"calculator--container\">\n        <Calculator.Screen {...this.props} />\n        <Calculator.Keypad {...this.props} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    expression: fromCalculator.getExpression(state),\n    total: fromCalculator.getTotal(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    calculate: buttonKey => {\n      dispatch(calculate(buttonKey));\n    },\n    delete: () => {\n      dispatch(deleteLastEntry());\n    },\n    clear: () => {\n      dispatch(clear());\n    },\n    evaluate: () => {\n      dispatch(evaluateExpression());\n    },\n    square: () => {\n      dispatch(square());\n    },\n    squareRoot: () => {\n      dispatch(squareRoot());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);"]},"metadata":{},"sourceType":"module"}
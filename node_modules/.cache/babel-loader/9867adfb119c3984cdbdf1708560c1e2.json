{"ast":null,"code":"export default (function (expression) {\n  var matched = new RegExp('([\\\\d]+\\\\.?[\\\\d]*)?([-+/*][\\\\d]+\\\\.?[\\\\d]*)*').exec(expression);\n\n  if (!matched) {\n    return 0;\n  }\n\n  if (/^[*+\\/]/.test(expression)) {\n    return function () {\n      throw new Error('Cannot start the expression with invalid operators');\n    };\n  }\n\n  return new Function(\"return \".concat(matched[0]))();\n});","map":{"version":3,"sources":["E:\\Work\\Projects\\FCC_FrontEnd_Projects\\src\\utils\\calculate.js"],"names":["expression","matched","RegExp","exec","test","Error","Function"],"mappings":"AAAA,gBAAe,UAACA,UAAD,EAAgB;AAE7B,MAAMC,OAAO,GAAI,IAAIC,MAAJ,CAAW,8CAAX,CAAD,CAA6DC,IAA7D,CAAkEH,UAAlE,CAAhB;;AAEA,MAAI,CAACC,OAAL,EAAc;AACZ,WAAO,CAAP;AACD;;AAED,MAAI,UAAUG,IAAV,CAAeJ,UAAf,CAAJ,EAA+B;AAC7B,WAAO,YAAM;AACX,YAAM,IAAIK,KAAJ,CAAU,oDAAV,CAAN;AACD,KAFD;AAGD;;AAED,SAAO,IAAIC,QAAJ,kBAAuBL,OAAO,CAAC,CAAD,CAA9B,IAAP;AACD,CAfD","sourcesContent":["export default (expression) => {\n\n  const matched = (new RegExp('([\\\\d]+\\\\.?[\\\\d]*)?([-+/*][\\\\d]+\\\\.?[\\\\d]*)*')).exec(expression)\n\n  if (!matched) {\n    return 0;\n  }\n\n  if (/^[*+\\/]/.test(expression)){\n    return () => {\n      throw new Error('Cannot start the expression with invalid operators')\n    }\n  }\n\n  return new Function(`return ${matched[0]}`)()\n}"]},"metadata":{},"sourceType":"module"}